---
- name: create system group
  group:
    name: "{{ gogs_system_group }}"
    system: true
    state: present
  become: true
  tags: gogs

- name: create system user
  user:
    name: "{{ gogs_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ gogs_system_group }}"
    home: "{{ gogs_home }}"
    createhome: yes
  become: true
  tags: gogs

- name: install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - unzip
    - git
  tags: gogs
  become: true

- name: check if is installed
  stat:
    path: "{{ gogs_home }}/gogs"
  register: __gogs_is_installed
  become: true
  tags: gogs

- name: gather currently installed version (if any)
  command: "{{ gogs_home }}/gogs --version"
  args:
    warn: false
  changed_when: false
  register: __gogs_current_version_output
  when: __gogs_is_installed.stat.exists
  become: true
  tags: gogs

- block:
    - name: get latest release
      uri:
        url: "https://api.github.com/repos/gogs/gogs/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      environment: "{{ proxy_env }}"
      no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5
      become: true
      tags: gogs

    - name: "set gogs version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        gogs_version: "{{ _latest_release.json.tag_name[1:] }}"
      become: true
      tags: gogs
  when:
    - gogs_version == "latest"

- block:
  - name: get checksum list from github
    set_fact:
      _checksums: "{{ lookup('url', 'https://github.com/gogs/gogs/releases/download/v' + gogs_version + '/sha256sums.txt', wantlist=True) | list }}"
    environment: "{{ proxy_env }}"
    run_once: true
    become: true
    tags: gogs

  - name: "get checksum for {{ go_arch }} architecture"
    set_fact:
      gogs_checksum: "{{ item.split(' ')[0] }}"
    with_items:
      - "{{ lookup('url', 'https://github.com/gogs/gogs/releases/download/v' + gogs_version + '/sha256sums.txt', wantlist=True) | list }}"
    when:
      - "('linux-' + go_arch + '.tar.gz') in item"
    become: true
    tags: gogs

  - name: download binary to local folder
    get_url:
      url: "https://github.com/gogs/gogs/releases/download/v{{ gogs_version }}/linux-{{ go_arch }}.tar.gz"
      dest: "/tmp/gogs-{{ gogs_version }}.linux-{{ go_arch }}.tar.gz"
      checksum: "sha256:{{ gogs_checksum }}"
    environment: "{{ proxy_env }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 5
    delay: 2
    # run_once: true # <-- this can't be set due to multi-arch support
    delegate_to: localhost
    check_mode: false
    become: true
    tags: gogs

  - name: unpack binaries
    unarchive:
      src: "/tmp/gogs-{{ gogs_version }}.linux-{{ go_arch }}.tar.gz"
      dest: "/tmp"
      creates: "/tmp/gogs-{{ gogs_version }}.linux-{{ go_arch }}/gogs"
    delegate_to: localhost
    check_mode: false
    become: true
    tags: gogs

  - name: propagate binaries
    copy:
      src: "/tmp/gogs-{{ gogs_version }}.linux-{{ go_arch }}/{{ item }}"
      dest: "{{ gogs_home }}/{{ item }}"
      mode: 0755
      owner: "{{ gogs_system_user }}"
      group: "{{ gogs_system_group }}"
    with_items:
      - gogs
      - template
      - public
    notify: restart gogs
    become: true
    tags: gogs
  when: (not __gogs_is_installed.stat.exists) or (__gogs_current_version_output.stderr_lines[0].split(" ")[2] != gogs_version)

- name: copy systemd unit file
  template:
    src: gogs.service.j2
    dest: /etc/systemd/system/gogs.service
    owner: root
    group: root
    mode: 0644
  notify: restart gogs
  tags: gogs
  become: true

- name: configure Gogs
  include_tasks: configure_gogs.yml

- name: ensure service is started and enabled
  systemd:
    name: gogs
    state: started
    enabled: yes
  tags: gogs
  become: true
